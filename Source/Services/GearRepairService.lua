---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markg.
--- DateTime: 20/06/2021 00:30
---
local INVENTORY_SLOT_NAME = MasterCore.INVENTORY_SLOT_NAME
local Config = MasterPrepare.Config

local GearRepairService, super = MasterCore.Class:Create("GearRepairService")
MasterPrepare.GearRepairService = GearRepairService

function GearRepairService:Init()
    self = super.Init(self)
    self.needed = false
    self.overollDurability = 100
    return self
end

function GearRepairService:Check()
    local overollInventoryItems = self:_GetOverallInventoryItemsDurability()
    local overallBagItemsDurability = self:_GetOverallBagItemsDurability()

    local overollDurability = overollInventoryItems
    if not Config.gear.repair:GetWarningInventoryOnly() then
        overollDurability = (overollDurability + overallBagItemsDurability) / 2
    end

    self.needed = overollDurability <= Config.gear.repair:GetMinDurability()
    self.overollDurability = math.floor(overollDurability)

    return not self.needed, self.overollDurability
end

function GearRepairService:_GetOverallBagItemsDurability()
    local durabilityPercent = 0
    local durabilityCount = 0
    for bag = 0, NUM_BAG_SLOTS do
        local numSlots = GetContainerNumSlots(bag)
        if numSlots > 0 then
            for slot = 1, numSlots do
                local current, maximum = GetContainerItemDurability(bag, slot);

                if current and maximum then
                    local percent = current * 100 / maximum
                    durabilityCount = durabilityCount + 1
                    durabilityPercent = durabilityPercent + percent
                end
            end
        end
    end

    if durabilityCount <= 0 then
        return 100
    end

    return  durabilityPercent / durabilityCount
end

function GearRepairService:_GetOverallInventoryItemsDurability()
    local durabilityPercent = 0
    local durabilityCount = 0
    local slotNames = {
        INVENTORY_SLOT_NAME.HEAD,
        INVENTORY_SLOT_NAME.NECK,
        INVENTORY_SLOT_NAME.SHOULDER,
        INVENTORY_SLOT_NAME.BACK,
        INVENTORY_SLOT_NAME.CHEST,
        INVENTORY_SLOT_NAME.WRIST,
        INVENTORY_SLOT_NAME.HANDS,
        INVENTORY_SLOT_NAME.WAIST,
        INVENTORY_SLOT_NAME.LEGS,
        INVENTORY_SLOT_NAME.FEET,
        INVENTORY_SLOT_NAME.FINGER_0,
        INVENTORY_SLOT_NAME.FINGER_1,
        INVENTORY_SLOT_NAME.TRINKET_0,
        INVENTORY_SLOT_NAME.TRINKET_1,
        INVENTORY_SLOT_NAME.MAIN_HAND,
        INVENTORY_SLOT_NAME.SECONDARY_HAND,
    }

    for _, slotName in ipairs(slotNames) do
        local slotID = GetInventorySlotInfo(slotName)
        local current, maximum = GetInventoryItemDurability(slotID);

        if current and maximum then
            local percent = current * 100 / maximum
            durabilityCount = durabilityCount + 1
            durabilityPercent = durabilityPercent + percent
        end
    end

    if durabilityCount <= 0 then
        return 100
    end
    return durabilityPercent / durabilityCount
end