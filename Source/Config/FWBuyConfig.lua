---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markg.
--- DateTime: 18/06/2021 21:22
---
local L = LibStub("AceLocale-3.0"):GetLocale(MASTER_PREPARE_NAME)

local FW_TYPE = {
    FOOD = "food",
    WATER = "water",
    HEALING_POTION = "healing_potion",
    MANA_POTION = "mana_potion"
}
MasterPrepare.FW_TYPE = FW_TYPE

local FWBuyConfig, super = MasterCore.Class:Create("FWBuyConfig", MasterCore.Config)
MasterPrepare.FWBuyConfig = FWBuyConfig
function FWBuyConfig:Init(type, db, order)
    self = super.Init(self, db, order)
    self.type = type
    self.name = "Buy"
    return self
end

function FWBuyConfig:GetOptions()
    local itemName, stat
    if self.type == FW_TYPE.FOOD then
        itemName = "food"
        stat = "Health Point"
    end

    if self.type == FW_TYPE.WATER then
        itemName = "water"
        stat = "Mana Point"
    end

    return {
        name = self.name,
        type = 'group',
        handler = self,
        order = self.order,
        args = {
            enable = {
                order = self:_AutoIncrementOrder(true),
                type = "toggle",
                name = "Buy " .. itemName .. " automatically",
                width = "full",
                set = "Set",
                get = "GetEnable"
            },
            space1 = {
                order = self:_AutoIncrementOrder(),
                type = "description",
                name = "\n\n",
                width = "full"
            },
            minRestock = {
                order = self:_AutoIncrementOrder(),
                type = "range",
                name = "Min Restock Quantity",
                desc = "Restock when it's lower than this value",
                min = 0,
                max = 200,
                step = 1,
                set = "Set",
                get = "GetMinRestock",
                disabled = function()
                    return not self.db.enable
                end
            },
            maxRestock = {
                order = self:_AutoIncrementOrder(),
                type = "range",
                name = "Max Restock Quantity",
                desc = "The maximum number can buy from vendor",
                min = 1,
                max = 200,
                step = 1,
                set = "Set",
                get = "GetMaxRestock",
                disabled = function()
                    return not self.db.enable
                end
            },
            empty = {
                order = self:_AutoIncrementOrder(),
                type = "description",
                name = "",
                width = "full"
            },
            alwaysRestock = {
                order = self:_AutoIncrementOrder(),
                type = "toggle",
                name = "Always restock",
                desc = "Restock even it's not lower than Min Restock Quantity",
                set = "Set",
                get = "GetAlwaysRestock",
                disabled = function()
                    return not self.db.enable
                end
            },
            header = {
                order = self:_AutoIncrementOrder(),
                type = "header",
                name = "Criteria",
            },
            info = {
                order = self:_AutoIncrementOrder(),
                type = "description",
                name = "The criteria to find the most suitable " .. itemName,
                width = "full"
            },
            usable = {
                order = self:_AutoIncrementOrder(),
                type = "toggle",
                name = "Usable",
                desc = "The " .. itemName .. " must be usable by this character",
                set = "SetCriteria",
                get = "GetCriteriaUsable",
                disabled = function()
                    return true
                end
            },
            mostValue = {
                order = self:_AutoIncrementOrder(),
                type = "toggle",
                name = "Most value",
                desc = "The " .. itemName .. " must have restore value closest to this charactor's " .. stat,
                set = "SetCriteria",
                get = "GetCriteriaMostValue",
                disabled = function()
                    return not self.db.enable
                end
            }
        }
    }
end

function FWBuyConfig:GetEnable()
    return self:Get("enable")
end

function FWBuyConfig:GetMinRestock()
    return self:Get("minRestock")
end

function FWBuyConfig:GetMaxRestock()
    return self:Get("maxRestock")
end

function FWBuyConfig:GetAlwaysRestock()
    return self:Get("alwaysRestock")
end

function FWBuyConfig:SetCriteria(info, value)
    self:Set(info, value, self.db.criteria)
end

function FWBuyConfig:GetCriteria(info)
    local key = self:_GetKey(info)
    return self.db.criteria[key]
end

function FWBuyConfig:GetCriteriaUsable()
    return self:GetCriteria("usable")
end

function FWBuyConfig:GetCriteriaMostValue()
    return self:GetCriteria("mostValue")
end

function FWBuyConfig:GetAllCriteria()
    return self.db.criteria
end

function FWBuyConfig:GetDefaults()
    return {
        enable = true,
        minRestock = 20,
        maxRestock = 30,
        alwaysRestock = true,
        criteria = {
            usable = true,
            mostValue = false,
        }
    }
end

