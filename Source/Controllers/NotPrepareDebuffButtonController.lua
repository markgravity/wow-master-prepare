---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markg.
--- DateTime: 21/06/2021 08:24
---
local AceEvent = LibStub("AceEvent-3.0")
local MESSAGE = MasterPrepare.MESSAGE
local EVENT = MasterCore.EVENT
local SCRIPT_HANDLER = MasterCore.SCRIPT_HANDLER
local FRAME_TYPE = MasterCore.FRAME_TYPE
local FRAME_TEMPLATE = MasterCore.FRAME_TEMPLATE

local NotPrepareDebuffButtonController, super = MasterCore.Class:Create("NotPrepareDebuffButtonController", MasterCore.EventController)
MasterPrepare.NotPrepareDebuffButtonController = NotPrepareDebuffButtonController

function NotPrepareDebuffButtonController:Init()
    self = super.Init(self, {
        EVENT.UNIT_AURA
    })
    self.isPrepared = true
    AceEvent:RegisterMessage(MESSAGE.PREPRATION_CHECKED, function(_, isPrepared, food, drink, autoRepair, autoSell)
        if self.debuffButtonIndex then
            local button = _G["DebuffButton" .. self.debuffButtonIndex]
            button:Hide()
        end

        self.isPrepared = isPrepared
        self.food = food
        self.drink = drink
        self.autoRepair = autoRepair
        self.autoSell = autoSell
        self.debuffButtonIndex = nil
        self:Show()
    end)
    return self
end

function NotPrepareDebuffButtonController:OnEvent(event)
    if event == EVENT.UNIT_AURA then
        self:Show()
    end
end

function NotPrepareDebuffButtonController:Show()
    local buttonName = "DebuffButton"

    if not IsResting() or self.isPrepared then
        if self.debuffButtonIndex then
            local button = _G[buttonName .. self.debuffButtonIndex]
            button:Hide()
        end
        self.debuffButtonIndex = nil
        return
    end

    local index = self.debuffButtonIndex or DEBUFF_ACTUAL_DISPLAY + 1
    local buttonFrameName = buttonName .. index
    local buff
    if not _G[buttonFrameName] then
        self.debuffButtonIndex = index
        buff = CreateFrame(FRAME_TYPE.BUTTON, buttonFrameName, BuffFrame, FRAME_TEMPLATE.DEBUFF_BUTTON);
        buff:SetScript(SCRIPT_HANDLER.ON_ENTER, function()
            self:ShowTootip(buff)
        end)
        buff:SetScript(SCRIPT_HANDLER.ON_LEAVE, function()
            GameTooltip:Hide()
        end)

        DEBUFF_ACTUAL_DISPLAY = DEBUFF_ACTUAL_DISPLAY + 1
    else
        buff = _G["DebuffButton" .. index]
        buff:Show()
    end

    DebuffButton_UpdateAnchors(buttonName, index)

    -- Set color of debuff border based on dispel class.
    local debuffSlot = _G[buttonFrameName .. "Border"];
    if (debuffSlot) then
        local color = DebuffTypeColor["none"];
        debuffSlot:SetVertexColor(color.r, color.g, color.b);
    end

    -- Set Texture
    local icon = _G["DebuffButton" .. index .. "Icon"];
    icon:SetTexture("Interface/ICONS/INV_Misc_Bag_19");
end

function NotPrepareDebuffButtonController:ShowTootip(button)
    GameTooltip:Hide()
    GameTooltip:ClearLines()
    GameTooltip:SetOwner(button, "ANCHOR_BOTTOMLEFT")
    GameTooltip:SetText("YOU'RE NOT PREPARED!")

    if self.food.numberNeeded > 0 then
        GameTooltip:AddLine("Food is missed by " .. self.food.numberNeeded, 1, 1, 1)
    end

    if self.drink.numberNeeded > 0 then
        GameTooltip:AddLine("Drink is missed by " .. self.drink.numberNeeded, 1, 1, 1)
    end

    if self.autoRepair.needed then
        GameTooltip:AddLine("Armor Durability is loss by " .. 100 - self.autoRepair.overollDurability .. "%", 1, 1, 1)
    end

    if self.autoSell.needed then
        GameTooltip:AddLine("Bags are junk filled by " .. self.autoSell.count .. ".", 1, 1, 1)
    end

    GameTooltip:Show()
end