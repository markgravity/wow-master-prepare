---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markg.
--- DateTime: 19/06/2021 18:42
---
local NecessityItemPreparation = MasterPrepare.NecessityItemPreparation
local NECESSITY_ITEM_TYPE = MasterPrepare.NECESSITY_ITEM_TYPE
local EVENT = MasterCore.EVENT
local Config = MasterPrepare.Config

local PreparationController, super = MasterCore.Class:Create("PreparationController", MasterCore.EventController)
MasterPrepare.PreparationController = PreparationController

function PreparationController:Init()
    self = super.Init(self, {
        EVENT.MERCHANT_SHOW,
        EVENT.BAG_UPDATE,
        EVENT.TAXIMAP_OPENED,
        EVENT.CONFIRM_SUMMON
    })
    self.food = NecessityItemPreparation:Init(NECESSITY_ITEM_TYPE.FOOD)
    self.drink = NecessityItemPreparation:Init(NECESSITY_ITEM_TYPE.DRINK)

    return self
end

function PreparationController:OnEvent(event)
    if event == EVENT.MERCHANT_SHOW then
        self:_Check()
        Wait(1, function()
            self:_Prepare()
        end)
        return
    end
end

function PreparationController:_Check()
    if Config.food:GetEnable() then
        self.food:Check()
    end

    if Config.drink:GetEnable() then
        self.drink:Check()
    end
end

function PreparationController:_Prepare()
    local numFoodNeeded = self.food.numberNeeded
    local numDrinkNeeded = self.drink.numberNeeded

    -- Nothing to restock
    if numFoodNeeded + numDrinkNeeded <= 0 then
        self:_SellItems(self.food:GetJunks())
        self:_SellItems(self.drink:GetJunks())
        return
    end

    -- Buy foods or drinks from merchant, if it's available
    for i = 1, GetMerchantNumItems() do
        local itemLink = GetMerchantItemLink(i)
        local itemId = GetItemID(itemLink)
        if numFoodNeeded > 0 and self.food.suitableItems[itemId] ~= nil then
            MassiveBuyMerchantItem(i, numFoodNeeded)
            numFoodNeeded = 0
            self:_SellItems(self.food:GetJunks())
        end

        if numDrinkNeeded > 0 and self.drink.suitableItems[itemId] ~= nil then
            MassiveBuyMerchantItem(i, numDrinkNeeded)
            numDrinkNeeded = 0
            self:_SellItems(self.drink:GetJunks())
        end

        -- All restock
        if numFoodNeeded + numDrinkNeeded <= 0 then
            return
        end
    end
end

function PreparationController:_SellItems(items)
    for bag = 0, NUM_BAG_SLOTS do
        local numSlots = GetContainerNumSlots(bag)
        if numSlots > 0 then
            for slot = 1, numSlots do
                local itemID = GetContainerItemID(bag, slot)
                if items[itemID] then
                    SellContainerItemToMerchant(bag, slot)
                end
            end
        end
    end
end