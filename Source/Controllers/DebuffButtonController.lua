---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markg.
--- DateTime: 21/06/2021 08:24
---
local AceEvent = LibStub("AceEvent-3.0")
local MESSAGE = MasterPrepare.MESSAGE
local EVENT = MasterCore.EVENT
local SCRIPT_HANDLER = MasterCore.SCRIPT_HANDLER
local FRAME_TYPE = MasterCore.FRAME_TYPE
local FRAME_TEMPLATE = MasterCore.FRAME_TEMPLATE

local DebuffButtonController, super = MasterCore.Class:Create("DebuffButtonController", MasterCore.EventController)
MasterPrepare.DebuffButtonController = DebuffButtonController

function DebuffButtonController:Init()
    self = super.Init(self, {
        EVENT.UNIT_AURA
    })

    self.isPrepared = true
    return self
end

function DebuffButtonController:OnEvent(event)
    if event == EVENT.UNIT_AURA then
        self:Show()
    end
end

function DebuffButtonController:OnMessage(message, isPrepared, food, water, repair, sell)
    --print(self.debuffButtonIndex)
    if self.debuffButtonIndex ~= nil then
        local button = _G["DebuffButton" .. self.debuffButtonIndex]
        button:Hide()
    end

    self.isPrepared = isPrepared
    self.food = food
    self.water = water
    self.repair = repair
    self.sell = sell
    self.debuffButtonIndex = nil
    self:Show()
end

function DebuffButtonController:Show()
    local buttonName = "DebuffButton"
    if not IsResting() or self.isPrepared then
        if self.debuffButtonIndex ~= nil then
            local button = _G[buttonName .. self.debuffButtonIndex]
            button:Hide()
        end
        self.debuffButtonIndex = nil
        return
    end

    local index = self.debuffButtonIndex or DEBUFF_ACTUAL_DISPLAY + 1
    --print(self.debuffButtonIndex,index)
    local buttonFrameName = buttonName .. index
    local buff = _G[buttonFrameName]
    if not buff then
        self.debuffButtonIndex = index
        buff = CreateFrame(FRAME_TYPE.BUTTON, buttonFrameName, BuffFrame, FRAME_TEMPLATE.DEBUFF_BUTTON);
        buff:SetScript(SCRIPT_HANDLER.ON_ENTER, function()
            self:ShowTootip(buff)
        end)
        buff:SetScript(SCRIPT_HANDLER.ON_LEAVE, function()
            GameTooltip:Hide()
        end)

        DEBUFF_ACTUAL_DISPLAY = DEBUFF_ACTUAL_DISPLAY + 1
    else
        buff:Show()
    end
    --print("show")
    DebuffButton_UpdateAnchors(buttonName, index)

    -- Set color of debuff border based on dispel class.
    local debuffSlot = _G[buttonFrameName .. "Border"];
    if (debuffSlot) then
        local color = DebuffTypeColor["none"];
        debuffSlot:SetVertexColor(color.r, color.g, color.b);
    end

    -- Set Texture
    local icon = _G["DebuffButton" .. index .. "Icon"];
    icon:SetTexture("Interface/ICONS/INV_Misc_Bag_19");
end

function DebuffButtonController:ShowTootip(button)
    GameTooltip:Hide()
    GameTooltip:ClearLines()
    GameTooltip:SetOwner(button, "ANCHOR_BOTTOMLEFT")
    GameTooltip:SetText("YOU'RE NOT PREPARED!")

    if self.food.numberNeeded > 0 then
        GameTooltip:AddLine("Food is missed by " .. self.food.numberNeeded, 1, 1, 1)
    end

    if self.water.numberNeeded > 0 then
        GameTooltip:AddLine("Drink is missed by " .. self.water.numberNeeded, 1, 1, 1)
    end

    if self.repair.needed then
        GameTooltip:AddLine("Armor Durability is loss by " .. 100 - self.repair.overollDurability .. "%", 1, 1, 1)
    end

    if self.sell.needed then
        GameTooltip:AddLine("Bags are junk filled by " .. self.sell.count .. ".", 1, 1, 1)
    end

    GameTooltip:Show()
end